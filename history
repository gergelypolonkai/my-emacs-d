;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(search-ring gnugo-option-history org-read-date-history xref--read-pattern-history query-replace-from-to-history read-expression-history input-method-history helm-google-input-history sx-search--query-history file-name-history helm-make-target-history query-replace-history regexp-history helm-gtags--completing-history string-rectangle-history magit-revision-history yes-or-no-p-history buffer-name-history tmphist org-tags-history helm-M-x-input-history minibuffer-history))
(setq search-ring '("use-package" "org-agenda" "use-packa" "logito" "gh" "ht" "queue" "spinner" "type" "select" "proceed" "use-package" "use-packa" "prog" "require" "smartparens"))
(setq gnugo-option-history '("--level 1"))
(setq org-read-date-history '("   "))
(setq read-expression-history '("(require 'dbus)" "(setq wakatime-api-key nil)" "(setq python-shell-interpreter \"/home/epolger/Projects/python/demand/demand-venv/bin/python\")" "(setq python-shell-interpreter \"/home/epolger/Projects/python/demand/demand-venv/bin/python\"" "(require 'magithub)" "(add-to-list 'package-archives '(\"marmalade\" . \"https://marmalade-repo.org/packages/\"))"))
(setq helm-google-input-history '("emacs check if in text mode"))
(setq sx-search--query-history '("emacs check if terminal" "clojure http server"))
(setq file-name-history '("~/.emacs.d/init.el" "~/.emacs.d/autoremove.txt" "~/Documents/orgmode/index.org" "~/sw_report.html" "~/.emacs.d/TODO.org" "~/.emacs.d/lisp/buf-manipulation.el" "~/Documents/orgmode/ericsson-notes.org" "~/.emacs.d/lisp/enclose-string.el" "~/Projects/python/dyn-dashboard/dyndashboard/settings.py" "~/Projects/python/dyn-dashboard/accounts/models.py" "~/Projects/python/dyn-dashboard/requirements.txt" "~/Documents/orgmode/dynamic-dashboard.org" "~/Documents/orgmode/ericsson-calendar.org" "~/GASK.json" "~/sw_report_orig.html" "~/.emacs.d/elpa/wakatime-mode-20161003.729/wakatime-mode.el" "~/Documents/orgmode/.agenda_files" "~/.agenda_files" "~/.emacs.d/elpa/helm-google-20160620.1149/helm-google.el" "~/.emacs.d/elpa/helm-flycheck-20160710.129/helm-flycheck.el" "/ssh:5250:/home/epolger/evikger-emacs-init.el" "/ssh:5250:/home/epolger/hexwords.txt" "~/Documents/orgmode/notes.org" "~/Projects/jekyll/gergelypolonkai.github.io/_drafts/gtk-actionable-in-action.md" "~/Projects/jekyll/gergelypolonkai.github.io/css/style.sass" "~/Projects/jekyll/gergelypolonkai.github.io/index.html" "~/Projects/jekyll/gergelypolonkai.github.io/_posts/2016-09-28-emacs-package-to-generate-gobject-boilerplate.md" "~/Projects/jekyll/gergelypolonkai.github.io/_posts/2016-10-04-git-merge-stages.md" "~/Projects/jekyll/gergelypolonkai.github.io/_layouts/default.html" "~/Projects/jekyll/gergelypolonkai.github.io/_includes/about.html" "~/Projects/jekyll/gergelypolonkai.github.io/_config.yml" "~/.emacs.d/.places" "~/.emacs.d/.gitignore" "~/.emacs.d/recompile-files.sh" "~/.emacs.d/elpa/wakatime-mode-20160929.624/wakatime-mode.el" "~/diff-highlight.md" "~/Documents/git-stash.md" "~/Documents/dynamic-dashboards.md" "~/Projects/elisp/gobgen/gobgen.el" "~/.emacs.d/elpa/gobgen-readme.txt" "~/Projects/NotOwn/wakatime-mode/wakatime-mode-test.el" "~/Projects/NotOwn/wakatime-mode/wakatime-mode.el" "~/.wakatime.cfg" "~/vízmű doksi.dat" "~/swcmbot-settings.json" "~/plist1" "~/plist" "~/nsgclient.misc" "~/favicon.ico.png" "~/favicon.ico" "~/examples.desktop" "~/docker-compose.yml" "~/calendar.ics" "~/.zshrc" "~/.zsh_history" "~/.zsh-update" "~/.zcompdump-elxa4y5sd12-5.0.2" "~/.zcompdump" "~/.xsession-errors" "~/.xinputrc" "~/.wakatime.log" "~/.wakatime.db" "~/.wakatime.cfg~" "~/.viminfo" "~/.vas_logon_server" "~/.vas_disauthcc_277025" "~/.v8flags.4.5.103.35.epolger.json" "~/.v8flags.3.14.5.9.epolger.json" "~/.steampid" "~/.steampath" "~/.sqlite_history" "~/.python_history" "~/.pulse-cookie" "~/.profile" "~/.profabevjava" "~/.pam_environment" "~/.npmrc" "~/.node_repl_history" "~/.netrc" "~/.lesshst" "~/.k5login" "~/.gitconfig" "~/.gemrc" "~/.face" "~/.eudc-options" "~/.dmrc" "~/.configdone_vas" "~/.configdone_tbird" "~/.configdone_proxypac" "~/.configdone_pidgin" "~/.configdone_launchericons" "~/.configdone_epm" "~/.configdone_elx_wallpapers" "~/.coffee_history" "~/.bzr.log" "~/.bashrc" "~/.bash_logout" "~/.bash_history" "~/.aspell.en.pws"))
(setq helm-make-target-history '("all"))
(setq query-replace-history '("~" "=" "CXP9027691" "CXP9021471" "&amp;" "&amp;amp;" "=" "`" "    " "	" "
" " " "
" "  " "-" "*" "  -" "	*" "    -" "		*" "      -" "			*" "        -" "				*"))
(setq regexp-history '("	available	" "GSWE"))
(setq helm-gtags--completing-history '("gswe_house_data_unref" "gswe_" "gswe_planet_"))
(setq string-rectangle-history '(";" "    " " " ";" "-local" "	" "; " "   " "*** TODO " "    " "-" "   " "  "))
(setq magit-revision-history '("HEAD^" "origin/master" "no-api-key-retry" "no-api-key-retry" "origin/master" "master" "gergelypolonkai/master" "origin/master" "gobgen" "gergelypolonkai/master" "gergelypolonkai/gobgen" "master" "origin/master"))
(setq yes-or-no-p-history '("yes" "y" "yes" "no" "yes" "no" "yes" "pes" "yes" "no"))
(setq buffer-name-history '("sw_report.html" "*zone*" "init.el" "notes.org" "TODO.org" "buf-manipulation.el" "init.el" "ericsson-notes.org" "notes.org" "index.org" "mobileorg.org" "index.org" "checksums.dat" "agendas.org" "requirements.txt" "*eshell*" "sw_report.html" "GASK.json" "sw_report.html" "sw_report_orig.html" "*magit-diff: .emacs.d" "index.org" "notes.org" "*Snake*" "snake-scores" "*Packages*" "agenda_files" ".agenda_files" "*Packages*" "*Messages*" "*Help*" "*Helm Help*" "*magit-diff: orgmode" "index.org" "*scratch*" "helm-flycheck.el" "*Messages*" "*EIEIO OBJECT BROWSE*" "*doctor*" "*Packages*" "*bubbles*" "*Help*" "bubbles-default-2-10-10-scores" "evikger-emacs-init.el" "about.html" "default.html" "*Completions*" "2016-09-28-emacs-package-to-generate-gobject-boilerplate.md" "*magit-diff: gergelypolonkai.github.io" "2016-10-04-git-merge-stages.md" "gtk-actionable-in-action.md" "style.sass" "gergelypolonkai.github.io" "gtk-actionable-test.glade" "index.org" "*magit: gergelypolonkai.github.io" "*magit-diff: gergelypolonkai.github.io" "index.html" "2016-09-28-emacs-package-to-generate-gobject-boilerplate.md" "eye.svg" "about.html<_includes>" "test.md" "_config.yml" "_posts" "gergelypolonkai.github.io" "images" "Pictures" "Screenshot from 2016-10-04 14:20:17.png" "index.org" "ericsson-calendar.org" "*magit: .emacs.d" "recompile-files.sh" "*magit-diff: .emacs.d" ".gitignore" "url" "recentf" "projectile-bookmarks.eld" "network-security.data" "history" "gerrit" "lastdir" "eshell" ".mc-lists.el" ".places" "wakatime-mode.el<wakatime-mode>" "gobgen-readme.txt" "wakatime-mode-test.el" "Makefile" "*Messages*" ".wakatime.cfg" "*Shell Command Output*" "*Compile-Log*" "init.el" "wakatime-mode.el" "wakatime-mode.el<wakatime-mode>" "wakatime-mode.el" "*magit-diff: .emacs.d" "init.el" "*Org Agenda*" ".agenda_files"))
(setq org-tags-history '("revise" "obsolete" "cscf_plm" "cscf_plm:demand" "cscf:demand" "cscf_plm:ericsson_only" "ericsson_only:demand" "demand:ericsson_only" "cscf_plm:ericsson_only:demand" "cscf_plm:demand:ericsson_only" "ericsson_only:mtas" "demand" "cscf_plm:mtas_git:ericsson_only:todo" "cscf_plm:ericsson_only" "cscf_plm:swcm:ericsson_only" "ericsson_only:ci_community_swcm" ":ericsson_only:ci_community" "ericsson_only"))
(setq helm-M-x-input-history '("package-au" "package-auto" "package-list" "packa" "eww" "customize-group" "customize-var" "ag" "git-time" "pack-list" "eshell" "list-pro" "nyan-stop" "zone" "nyan-start" "zo" "zone" "rep" "replace-string" "ag" "info" "eshell" "eshel" "proc" "eshell" "widen" "repl" "global-whit" "glob" "waka" "process" "global-waka" "replace" "package-list" "org-agenda$" "ag" "chrome" "customize-group" "byt" "snake" #("***" 0 2 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#2e3436") fontified t) 2 3 (face org-level-3 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (2 1 [10040]) fontified t)) "fortune" "copyright" "packa" "zone-whe" "zone-lea" "package-list" "packa-sho" "google" "zone-lea" "info" "identica" "gnugo" "zone-wh" "zone-lea" "byte" "revert-bu" "eshell" "package-list-pa" "eieio" "customize-gr" "customize-apr" "doctor" "packa-show" "calen" "calc" "calcu" "bug-ref" "bubbl" "black" "benchm" "battery" "cust-var" "line-num" "line-" "ediff" "eshell" "gobg" "zone-wh" "zone-l" "whites" "repl " "chm" "make-dir" "make$" "ediff" "byte" "dired" "package" "github" "githu" "github-not" "packag" "package-li" "ediff" "edif" "eshel" "package-list" "packa-inst" "package-de"))
(setq minibuffer-history '("mess" "init" #("ghuse-package" 0 2 (face (whitespace-line) fontified t) 2 13 (face (whitespace-line) fontified t)) #("Queue" 0 5 (tabulated-list-entry [("queue" face package-name font-lock-face package-name follow-link t package-desc [cl-struct-package-desc queue (0 1 1) "Queue data structure" nil nil nil "/home/epolger/.emacs.d/elpa/queue-0.1.1" ((:keywords "extensions" "data structures" "queue") (:url . "http://www.dr-qubit.org/emacs.php")) t] action package-menu-describe-package) #("0.1.1" 0 5 (font-lock-face package-status-dependency)) #("dependency" 0 10 (font-lock-face package-status-dependency)) "" #("Queue data structure" 0 20 (font-lock-face package-description))] tabulated-list-id [cl-struct-package-desc queue (0 1 1) "Queue data structure" nil nil nil "/home/epolger/.emacs.d/elpa/queue-0.1.1" ((:keywords "extensions" "data structures" "queue") (:url . "http://www.dr-qubit.org/emacs.php")) t] tabulated-list-column-name "Description" help-echo #("Description: Queue data structure" 13 33 (font-lock-face package-description)) font-lock-face package-description)) #("use-package" 0 11 (face (whitespace-line) fontified t)) #("spinner" 0 7 (tabulated-list-entry [("spinner" face package-name font-lock-face package-name follow-link t package-desc [cl-struct-package-desc spinner (1 7 1) "Add spinners and progress-bars to the mode-line for ongoing operations" nil nil nil "/home/epolger/.emacs.d/elpa/spinner-1.7.1" ((:keywords "processes" "mode-line") (:url . "https://github.com/Malabarba/spinner.el")) t] action package-menu-describe-package) #("1.7.1" 0 5 (font-lock-face package-status-dependency)) #("dependency" 0 10 (font-lock-face package-status-dependency)) "" #("Add spinners and progress-bars to the mode-line for ongoing operations" 0 70 (font-lock-face package-description))] tabulated-list-id [cl-struct-package-desc spinner (1 7 1) "Add spinners and progress-bars to the mode-line for ongoing operations" nil nil nil "/home/epolger/.emacs.d/elpa/spinner-1.7.1" ((:keywords "processes" "mode-line") (:url . "https://github.com/Malabarba/spinner.el")) t] tabulated-list-column-name "Package" action package-menu-describe-package package-desc [cl-struct-package-desc spinner (1 7 1) "Add spinners and progress-bars to the mode-line for ongoing operations" nil nil nil "/home/epolger/.emacs.d/elpa/spinner-1.7.1" ((:keywords "processes" "mode-line") (:url . "https://github.com/Malabarba/spinner.el")) t] follow-link t font-lock-face package-name face package-name category default-button button (t))) "packa" "init" "/home/epolger/.emacs.d/aut" "ind" "/home/epolger/.emacs.d/init" "pack" "init" "/home/epolger/.emacs.d/elpa" "macr" "emacs" "/home/epolger/sw" "developer.gnome.org" "eww" "emas eww tutorial" "stash@{0}" "On master: rebasing" "init" "TODO" #("multiple-cursors" 0 16 (face org-level-3 fontified t)) "inde" "/home/epolger/.emacs.d/lisp/buf-man" #("*" 0 1 (face org-level-1 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (0 1 [9673]) fontified t)) "TOD" "ini" "/home/epolger/.emacs.d/TO" #("*" 0 1 (face org-level-1 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (0 1 [9673]) fontified t)) "/home/epolger/Documents/orgmode/" "c-add-style" "/ssh:snoopy:/home/polesz/.emacs.d" "init" "/home/epolger/Documents/orgmode/" "index.org" "/ssh:snoopy:/home/polesz/Documents/orgmode" "/home/epolger/.emacs.d/" "/home/epolger/Documents/orgmode/" "=" "inde" "assq" "/home/epolger/.emacs.d/lisp/" "sh" "/home/epolger/Projects/python/dyn-dashboard/dyndashboard/sett" "/home/epolger/Projects/python/dyn-dashboard/accounts/models" "/home/epolger/Projects/python/dyn-dashboard/.gitignore" "/home/epolger/Projects/python/dyn-dashboard/" "/home/epolger/Projects/python/dyn-dashboard/req" "/home/epolger/Documents/orgmode/" "erics" "/home/epolger/sw" "/home/epolger/GAS" "/home/epolger/sw_" "/home/epolger/sw" "/home/epolger/.em" "/home/epolger/Documents/orgmode/" "COMPLETED" "ind" "waka" "/home/epolger/.emacs.d/elpa/wakatime-mode-20161003.729/" "/home/epolger/.emacs.d/elpa/wakatime-mode-20161003.729/waka" "/home/epolger/Projects/NotOwn/wakat" "packag" "glasse" "cursor-sen" "Polonkai, Inc." "copyright" "emacs mud" "60" "/home/epolger/Documents/orgmode/agenda_files" "ind" "init" "/home/epolger/Documents/orgmode/agenda_files" "/home/epolger/.agen" "/home/epolger/.emacs.d/init" "/home/epolger/.emacs.d/" "emacs cedet" "emacs cc-guess" "bug" "/home/epolger/Documents/orgmode/ind" "stash@{0}" "On master: rebasing" "/home/epolger/.ema" "/home/epolger/Documents/orgmode/eri" "inde" "acs" "/home/epolger/.emacs.d/" "gergely@polonkai.eu" "gergely.polonkai@datamost.com" "dig" "scr" "dbus-get" "dbus" "artist-" "align" "allout" "60"))
